<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.sm.shoptemplatetest.repository.OdRepository">

    <!-- 주문 저장 -->
    <insert id="insert" useGeneratedKeys="true" keyProperty="odId">
        INSERT INTO orders
            (cust_id, od_method, od_status, od_qt, name, addr, tel)
        VALUES
            (#{custId}, #{odMethod}, #{odStatus}, #{odQt}, #{name}, #{addr}, #{tel})
    </insert>

    <!-- 주문 상세 저장 -->
    <insert id="insertDetail">
        INSERT INTO orderdetail
            (od_id, product_id, od_detail_qt, od_detail_totalprice)
        VALUES
            (#{odId}, #{productId}, #{odDetailQt}, #{odDetailTotalPrice})
    </insert>

    <!-- 주문 상세 조회 -->
    <select id="selectDetail" resultType="edu.sm.shoptemplatetest.dto.OdDetail">
        SELECT * FROM orderdetail WHERE od_id = #{odId}
    </select>

    <!-- 고객별 주문 헤더 조회 추가 -->
    <select id="findByCustId"
            parameterType="string"
            resultType="edu.sm.shoptemplatetest.dto.Od">
        SELECT
            od_id           AS odId,
            cust_id         AS custId,
            od_date         AS odDate,
            od_method       AS odMethod,
            od_status       AS odStatus,
            od_qt           AS odQt,
            name            AS name,
            addr            AS addr,
            tel             AS tel
        FROM orders
        WHERE cust_id = #{custId}
        ORDER BY od_date DESC
    </select>

    <!-- 먼저 orderdetail 삭제 -->
    <delete id="deleteDetailByCustId" parameterType="String">
        DELETE FROM orderdetail
        WHERE od_id IN (
            SELECT od_id FROM orders WHERE cust_id = #{custId}
        )
    </delete>

    <!-- 그 다음 주문 삭제 -->
    <delete id="deleteByCustId" parameterType="String">
        DELETE FROM orders WHERE cust_id = #{custId}
    </delete>
</mapper>